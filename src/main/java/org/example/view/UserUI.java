package org.example.view;

import org.example.CommonVariable;
import org.example.controller.CommonController;
import org.example.database.RoomData;
import org.example.model.Room;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class UserUI extends javax.swing.JFrame {
    private final String[] tableColNames = {"Tên phòng học", "Toà nhà", "Loại phòng", "Trạng thái"};
    private RoomData roomData;
    private CommonController commonController;
    private final ActionListener ac;
    private TableModel tableModel;
    private OrderClass orderClassUI;
    private CommonVariable commonVariable;

    /**
     * Creates new form UserUI
     */
    public UserUI(RoomData roomData, CommonController commonController, @NotNull CommonController ac, CommonVariable commonVariable) {
        this.roomData = roomData;
        this.commonController = commonController;
        this.ac = ac;
        this.orderClassUI = new OrderClass(ac);
        this.commonVariable = commonVariable;
        ac.setUserUI(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {
        setLocationRelativeTo(null);
        tableModel = new TableModel(roomData);
        popupMenu = new JPopupMenu();
        orderMenuItem = new JMenuItem("Mượn phòng");
        orderMenuItem.setActionCommand("orderMenuItemAction");
        orderMenuItem.addActionListener(ac);
        popupMenu.add(orderMenuItem);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchBtn = new javax.swing.JButton();
        resetFilterBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        classNameTextField = new javax.swing.JTextField();
        typeComboBox = new javax.swing.JComboBox<>();
        statusComboBox = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jTable1.setComponentPopupMenu(popupMenu);
        jLabel1.setText("Tên phòng");

        jLabel2.setText("Loại phòng");

        jLabel3.setText("Trạng thái");

        searchBtn.setText("Tìm kiếm");
        searchBtn.setActionCommand("searchUserUIAction");
        searchBtn.addActionListener(ac);
        resetFilterBtn.setText("Cài lại bộ lọc");
        resetFilterBtn.setActionCommand("resetFilterUserUIAction");
        resetFilterBtn.addActionListener(ac);
        jButton3.setText("Đăng xuất");
        jButton3.setActionCommand("logoutUserUIAction");
        jButton3.addActionListener(ac);
        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Phòng thực hành", "Phòng lý thuyết"}));
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tất cả", "Chưa được mượn", "Chờ xác nhận", "Đã được mượn"}));
        statusComboBox.setToolTipText("");

        jTable1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jTable1.setModel(tableModel);
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton3))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(86, 86, 86)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(37, 37, 37)
                                                                .addComponent(resetFilterBtn))
                                                        .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(classNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 63, Short.MAX_VALUE)))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel1)
                                                        .addComponent(classNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(typeComboBox)
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(50, 50, 50))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(resetFilterBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify
    private javax.swing.JTextField classNameTextField;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton resetFilterBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JComboBox<String> typeComboBox;
    private JPopupMenu popupMenu;
    private JMenuItem orderMenuItem;

    // End of variables declaration

    class TableModel extends AbstractTableModel {
        protected RoomData data;

        public List<Room> getRenderData() {
            return renderData;
        }

        private List<Room> renderData = new ArrayList<>();

        public TableModel(@NotNull RoomData data) {
            this.data = data;
            setRenderData(data.getAll());
        }

        public void setRenderData(List<Room> data) {
            this.renderData = data;
        }

        @Override
        public int getRowCount() {
            return renderData.size();
        }

        @Override
        public int getColumnCount() {
            return 4;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Room room = renderData.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return room.getName();
                case 2:
                    if (room.getType() == 1) {
                        return "Phòng thực hành";
                    }
                    return "Phòng lý thuyết";
                case 1:
                    return room.getLocation();
                case 3:
                    if (room.getStatus() == 1) {
                        return "Chưa được mượn";
                    } else if (room.getStatus() == 3) {
                        return "Đã được mượn";
                    }
                    return "Chờ xác nhận";
                default:
                    return null;
            }
        }

        @Override
        public String getColumnName(int index) {
            return tableColNames[index];
        }
    }
    public void searchRoom() {
        List<Room> dataSearch = roomData.getByCondition(classNameTextField.getText(), typeComboBox.getSelectedIndex(), statusComboBox.getSelectedIndex());
        tableModel.setRenderData(dataSearch);
        jTable1.updateUI();
    }
    public void resetFilter() {
        classNameTextField.setText("");
        typeComboBox.setSelectedIndex(0);
        statusComboBox.setSelectedIndex(0);
    }
    public void openModalOrderClass() {
        Room roomSelected = tableModel.getRenderData().get(jTable1.getSelectedRow());
        if(roomSelected.getStatus() == 1) {
            this.orderClassUI.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(this, "Chỉ mượn được phòng ở trạng thái 'Chưa được mượn'");
        }
    }
    public void submitOrderClass() throws IOException {
        Room roomSelected = tableModel.getRenderData().get(jTable1.getSelectedRow());
        UUID id = roomSelected.getId();
        Room newRoom = new Room(roomSelected.getName(), roomSelected.getType(), roomSelected.getLocation());
        newRoom.setStatus(2);
        newRoom.setUserOrder(commonVariable.getUserName());
        newRoom.setDate(orderClassUI.getDate());
        newRoom.setLessons(orderClassUI.getLessons());
        roomData.updateRoom(id, newRoom);
        jTable1.updateUI();
    }
}